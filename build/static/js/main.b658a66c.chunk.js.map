{"version":3,"sources":["utils/constants.js","actions/web3Actions.js","components/FormPage.js","components/DeploymentPage.js","components/App/index.js","reducers/web3Reducer.js","store.js","index.js"],"names":["WEB3_FETCHING","WEB3_LOADED","WEB3_FETCH_FAILED","NO_DEPLOYMENT","DEPLOYMENT_FAILED","DEPLOYED","DEPLOYMENT_STARTED","DEPLOYMENT_SIGNED","SET_WEB3_STATUS","SET_WEB3_INSTANCE","SET_DEPLOYMENT_STATUS","SET_DEPLOYMENT_ADDRESS","setWeb3ConnexionStatus","status","type","payload","setWeb3Instance","web3","setDeploymentStatus","setDeploymentAddress","address","connect","state","statusFetchWeb3","connexionStatus","dispatch","handleActivateWeb3","a","window","ethereum","request","method","Web3","provider","handleFormSubmit","args","name","symbol","recipients","_totalSupply","_redistributionRate","totalSupply","redistributionRate","eth","Contract","fairCoinJsonInterface","abi","fairCoin","getAccounts","addresses","deploy","data","bytecode","arguments","send","from","on","error","console","log","then","instance","options","deployCurrency","pageBody","useState","setRecipients","setName","setSymbol","setTotalSupply","setRedistributionRate","href","Form","Group","controlId","Label","FormControl","value","onChange","e","target","placeholder","map","recipient","i","Button","variant","onClick","newRecipients","splice","Row","Col","sm","xs","className","deploymentStatus","deployedAt","handleReturnButtonClicked","body","appBody","Navbar","bg","Brand","Container","initialState","undefined","web3Reducer","action","createStore","applyMiddleware","thunk","autoRefreshOnNetworkChange","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b658a66c.chunk.js","sourcesContent":["export const WEB3_NOT_FETCHED = \"WEB3 NOT FETCHED\";\nexport const WEB3_FETCHING = \"WEB3 FETCHING\";\nexport const WEB3_LOADED = \"WEB3 LOADED\";\nexport const WEB3_FETCH_FAILED = \"WEB3 FETCH FAILED\";\nexport const NO_DEPLOYMENT = \"NO DEPLOYMENT\";\nexport const DEPLOYMENT_FAILED = \"DEPLOYMENT FAILED\";\nexport const DEPLOYED = \"DEPLOYED\";\nexport const DEPLOYMENT_STARTED = \"DEPLOYMENT STARTED\";\nexport const DEPLOYMENT_SIGNED = \"DEPLOYMENT SIGNED\";\n","import {\n    DEPLOYED,\n    DEPLOYMENT_FAILED, DEPLOYMENT_SIGNED, DEPLOYMENT_STARTED,\n    WEB3_FETCH_FAILED,\n    WEB3_FETCHING,\n    WEB3_LOADED\n} from \"../utils/constants\";\nimport fairCoinJsonInterface from \"../solidity/build/FairCoin.json\"\nimport Web3 from \"web3\";\n\nexport const SET_WEB3_STATUS = \"SET WEB3 STATUS\"\nexport const SET_WEB3_INSTANCE = \"SET WEB3 INSTANCE\"\nexport const SET_DEPLOYMENT_STATUS = \"SET DEPLOYMENT STATUS\"\nexport const SET_DEPLOYMENT_ADDRESS = \"SET DEPLOYMENT ADDRESS\"\n\nexport function fetchWeb3(){\n    return async dispatch => {\n        dispatch(setWeb3ConnexionStatus(WEB3_FETCHING))\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n                if (accounts[0]) {\n                    dispatch(setWeb3ConnexionStatus(WEB3_LOADED))\n                    const provider = await new Web3(window.ethereum)\n                    dispatch(setWeb3Instance(provider))\n                } else\n                    dispatch(setWeb3ConnexionStatus(WEB3_FETCH_FAILED))\n            } catch {\n                dispatch(setWeb3ConnexionStatus(WEB3_FETCH_FAILED))\n            }\n        } else\n            dispatch(setWeb3ConnexionStatus(WEB3_FETCH_FAILED))\n    }\n}\n\nexport function deployCurrency({\n    name, symbol, recipients, _totalSupply, _redistributionRate,web3}){\n    return async dispatch => {\n        // arguments transformation\n        let totalSupply = _totalSupply * 10**5\n        let redistributionRate = _redistributionRate * 10\n\n        dispatch(setDeploymentStatus(DEPLOYMENT_STARTED))\n        let fairCoin = await new web3.eth.Contract(fairCoinJsonInterface.abi)\n        const addresses = await web3.eth.getAccounts()\n        fairCoin.deploy({\n            data : fairCoinJsonInterface.bytecode,\n            arguments: [name,symbol,recipients,totalSupply,redistributionRate]})\n            .send({from:addresses[0]},()=>{\n                setDeploymentStatus(DEPLOYMENT_SIGNED)\n            })\n            .on('error', error => {\n                console.log(error)\n                dispatch(setDeploymentStatus(DEPLOYMENT_FAILED))\n            })\n            .then(instance => {\n                dispatch(setDeploymentAddress(instance.options.address))\n                dispatch(setDeploymentStatus(DEPLOYED))\n            })\n    }\n}\n\nexport const setWeb3ConnexionStatus = status => ({\n    type: SET_WEB3_STATUS,\n    payload: status\n})\n\nexport const setWeb3Instance = web3 => ({\n    type: SET_WEB3_INSTANCE,\n    payload: web3\n})\n\nexport const setDeploymentStatus = status => ({\n    type: SET_DEPLOYMENT_STATUS,\n    payload: status\n})\n\nexport const setDeploymentAddress = address => ({\n    type: SET_DEPLOYMENT_ADDRESS,\n    payload: address\n})","import {useState} from \"react\";\nimport {\n    WEB3_FETCH_FAILED,\n    WEB3_FETCHING,\n    WEB3_LOADED\n} from \"../utils/constants\";\nimport {\n    Button,\n    Col,\n    Form,\n    FormControl,\n} from \"react-bootstrap\";\nimport {deployCurrency, fetchWeb3} from \"../actions/web3Actions\";\nimport {connect} from \"react-redux\";\n\nfunction FormPage({statusFetchWeb3, handleActivateWeb3, handleFormSubmit, web3}) {\n    const [recipients, setRecipients] = useState([''])\n    const [name, setName] = useState('')\n    const [symbol, setSymbol] = useState('')\n    const [totalSupply, setTotalSupply] = useState(50000000000)\n    const [redistributionRate,setRedistributionRate] = useState(4)\n\n    let pageBody\n    switch (statusFetchWeb3){\n        case WEB3_FETCHING:\n            pageBody = <h3>En attente de la connexion web3 ...</h3>\n            break\n        case WEB3_FETCH_FAILED:\n            pageBody = <>\n                <h3>Echec de la connexion web3.</h3>\n                <p>Si vous ne savez pas ce que cela veut dire, rendez vous sur&nbsp;\n                    <a href={\"http://www.metamask.io\"}>metamask.io</a></p>\n            </>\n            break\n        case WEB3_LOADED:\n            pageBody = <>\n                <Form>\n                    <Form.Group controlId={\"name\"}>\n                        <Form.Label>Nom de la monnaie</Form.Label>\n                        <FormControl\n                            value={name}\n                            onChange={e=>{\n                                setName(e.target.value)\n                            }}\n                            type={\"text\"}\n                            placeholder={\"euro\"}/>\n                    </Form.Group>\n                    <Form.Group controlId={\"symbol\"}>\n                        <Form.Label>Symbole</Form.Label>\n                        <FormControl\n                            type={\"text\"}\n                            placeholder={\"EUR\"}\n                            value={symbol}\n                            onChange={e=>{\n                                setSymbol(e.target.value)\n                            }}/>\n                    </Form.Group>\n                    {recipients.map((recipient,i) =>\n                        <Form.Group controlId={\"address\"+i} key={i}>\n                            <Form.Label>\n                                Adresse de récipiendaire {i+1}&nbsp;&nbsp;&nbsp;&nbsp;\n                                <Button variant=\"outline-danger\"\n                                        onClick={()=>{\n                                            let newRecipients = [...recipients]\n                                            newRecipients.splice(i,1)\n                                            setRecipients(newRecipients)\n                                        }}>\n                                    Supprimer\n                                </Button>\n                            </Form.Label>\n                            <FormControl\n                                type={\"text\"}\n                                placeholder={\"0x13aA399f57AEEfDde78F611999B30e0A50BCe59D\"}\n                                value={recipients[i]}\n                                onChange={e => {\n                                    let newRecipients = [...recipients]\n                                    newRecipients[i] = e.target.value\n                                    setRecipients(newRecipients)\n                                }}/>\n                        </Form.Group>)}\n                    <Form.Group controlId={\"add-address\"}>\n                        <Button\n                            variant={\"secondary\"}\n                            onClick={()=>{setRecipients([...recipients,''])}}>\n                            Ajouter un récipiendaire\n                        </Button>\n                    </Form.Group>\n                    <Form.Group controlId={\"totalSupply\"}>\n                        <Form.Label>\n                            Quantité totale de monnaie\n                        </Form.Label>\n                        <FormControl\n                            type={\"number\"}\n                            value={totalSupply}\n                            onChange={e=>{\n                                setTotalSupply(e.target.value)\n                            }}/>\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Row>\n                            <Col sm={8}>\n                                <Form.Label>\n                                    Taux de redistribution annuel\n                                </Form.Label>\n                                <FormControl\n                                    type=\"range\"\n                                    value={redistributionRate}\n                                    onChange={e=>{\n                                        setRedistributionRate(e.target.value)\n                                    }}/>\n                            </Col>\n                            <Col xs={\"auto\"}>\n                                <FormControl\n                                    type={\"number\"}\n                                    value={redistributionRate}\n                                    onChange={e=>{\n                                        setRedistributionRate(e.target.value)\n                                    }}/>%\n                            </Col>\n                        </Form.Row>\n                    </Form.Group>\n                    <Button variant=\"primary\"\n                            onClick={() => {\n                                handleFormSubmit({\n                                    name: name,\n                                    symbol: symbol,\n                                    recipients: recipients,\n                                    _totalSupply: totalSupply,\n                                    _redistributionRate: redistributionRate,\n                                    web3:web3\n                                })}}>\n                        Déployer\n                    </Button>\n                </Form></>\n            break\n        default:\n            pageBody = <><br/><Button\n                variant={\"primary\"}\n                onClick={handleActivateWeb3}>\n                Activer la connexion Ethereum\n            </Button></>\n    }\n\n    return (\n        <div className=\"FormPage\">\n            <h1>Rendez le monde plus juste</h1>\n            <h2>Créez une monnaie sociale</h2>\n            {pageBody}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    statusFetchWeb3: state.connexionStatus,\n    web3: state.web3\n})\n\nconst mapDispatchToProps = dispatch => ({\n    handleActivateWeb3: () => dispatch(fetchWeb3()),\n    handleFormSubmit: (args) => dispatch(deployCurrency(args))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(FormPage);","import {connect} from \"react-redux\";\nimport {\n    DEPLOYED,\n    DEPLOYMENT_FAILED, DEPLOYMENT_SIGNED,\n    DEPLOYMENT_STARTED,\n    NO_DEPLOYMENT\n} from \"../utils/constants\";\nimport {Button} from \"react-bootstrap\";\nimport {setDeploymentStatus} from \"../actions/web3Actions\";\n\nfunction DeploymentPage({deploymentStatus,deployedAt,handleReturnButtonClicked}){\n    let body\n    switch (deploymentStatus){\n        case DEPLOYMENT_FAILED:\n            body = <p>Le déploiement a échoué. Ouvrez la console pour consulter\n                l'erreur.</p>\n            break\n        case DEPLOYED:\n            body = <p>Votre nouvelle monnaie est disponible à l'adresse : {deployedAt}</p>\n            break\n        case DEPLOYMENT_STARTED:\n            body = <p>Veuillez signer la transaction de déploiement à l'aide de votre portefeuille.</p>\n            break\n        case DEPLOYMENT_SIGNED:\n            body = <p>Transaction envoyée. En attente de la blockchain ...</p>\n            break\n        default:\n            body = ''\n    }\n\n    return (\n        <>\n            <h1>Déploiement</h1>\n            <br/>\n            {body}\n            <br/>\n            <Button\n                onClick={()=>{handleReturnButtonClicked()}}\n            >Revenir au formulaire</Button>\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    deploymentStatus: state.deploymentStatus,\n    deployedAt: state.deployedAt\n})\n\nconst mapDispatchToProps = dispatch => ({\n    handleReturnButtonClicked: () => dispatch(setDeploymentStatus(NO_DEPLOYMENT))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(DeploymentPage)","import './App.css';\nimport {\n    Col,\n    Container,\n    Row,\n    Navbar\n} from \"react-bootstrap\";\nimport FormPage from \"../FormPage\";\nimport {connect} from \"react-redux\";\nimport {NO_DEPLOYMENT} from \"../../utils/constants\";\nimport DeploymentPage from \"../DeploymentPage\";\n\nfunction App({deploymentStatus}) {\n\n    let appBody = <FormPage/>\n    if (deploymentStatus !== NO_DEPLOYMENT)\n        appBody = <DeploymentPage/>\n\n    return (\n        <div className=\"App\">\n            <Navbar bg=\"light\">\n                <Navbar.Brand>FairCoin</Navbar.Brand>\n            </Navbar>\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col xs={8}>\n                        <br/>\n                        {appBody}\n                        <br/>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    deploymentStatus: state.deploymentStatus\n})\n\nexport default connect(mapStateToProps,null)(App);\n","import {NO_DEPLOYMENT, WEB3_NOT_FETCHED} from \"../utils/constants\";\nimport {\n    SET_DEPLOYMENT_ADDRESS,\n    SET_DEPLOYMENT_STATUS,\n    SET_WEB3_INSTANCE,\n    SET_WEB3_STATUS\n} from \"../actions/web3Actions\";\n\nconst initialState = {\n    connexionStatus : WEB3_NOT_FETCHED,\n    web3 : undefined,\n    deploymentStatus: NO_DEPLOYMENT,\n    deployedAt: undefined\n}\n\nexport const web3Reducer = (state = initialState, action) => {\n    switch (action.type){\n        case SET_WEB3_STATUS:\n            return {\n                ...state,\n                connexionStatus: action.payload\n            }\n        case SET_WEB3_INSTANCE:\n            return {\n                ...state,\n                web3: action.payload\n            }\n        case SET_DEPLOYMENT_STATUS:\n            return {\n                ...state,\n                deploymentStatus: action.payload\n            }\n        case SET_DEPLOYMENT_ADDRESS:\n            return {\n                ...state,\n                deployedAt: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default web3Reducer","import {applyMiddleware, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport web3Reducer from \"./reducers/web3Reducer\";\n\nexport default createStore(web3Reducer, applyMiddleware(thunk))\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nif(window.ethereum)\n    window.ethereum.autoRefreshOnNetworkChange = false\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}